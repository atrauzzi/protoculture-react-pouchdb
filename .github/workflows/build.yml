# https://stackoverflow.com/questions/49316050/how-to-deal-semantic-versioning-on-jenkins#49329647
# https://github.com/marketplace/actions/tag-release-on-push-action
# https://github.com/marketplace/actions/git-semantic-version
# https://github.com/marketplace/actions/upload-artifact
# https://github.com/marketplace/actions/download-artifact
name: Build
on: push

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1

      - name: Install Yarn
        run: npm install -g yarn

      - name: Yarn Install
        run: yarn install --frozen-lockfile

      - name: Lint
        run: yarn lint

      - name: Fetch tags for GitVersion
        run: git fetch --tags

      - name: Fetch master for GitVersion
        if: github.ref != 'refs/heads/master'
        run: git branch --create-reflog master origin/master

      - name: GitVersion
        id: gitversion  # step id used as reference for output values
        uses: roryprimrose/rungitversion@v1.0.0

      - name: Output version values
        run: |
          echo "Major: ${{ steps.gitversion.outputs.Major }}"
          echo "Minor: ${{ steps.gitversion.outputs.Minor }}"
          echo "Patch: ${{ steps.gitversion.outputs.Patch }}"
          echo "PreReleaseTag: ${{ steps.gitversion.outputs.PreReleaseTag }}"
          echo "PreReleaseTagWithDash: ${{ steps.gitversion.outputs.PreReleaseTagWithDash }}"
          echo "PreReleaseLabel: ${{ steps.gitversion.outputs.PreReleaseLabel }}"
          echo "PreReleaseNumber: ${{ steps.gitversion.outputs.PreReleaseNumber }}"
          echo "WeightedPreReleaseNumber: ${{ steps.gitversion.outputs.WeightedPreReleaseNumber }}"
          echo "BuildMetaData: ${{ steps.gitversion.outputs.BuildMetaData }}"
          echo "BuildMetaDataPadded: ${{ steps.gitversion.outputs.BuildMetaDataPadded }}"
          echo "FullBuildMetaData: ${{ steps.gitversion.outputs.FullBuildMetaData }}"
          echo "MajorMinorPatch: ${{ steps.gitversion.outputs.MajorMinorPatch }}"
          echo "SemVer: ${{ steps.gitversion.outputs.SemVer }}"
          echo "LegacySemVer: ${{ steps.gitversion.outputs.LegacySemVer }}"
          echo "LegacySemVerPadded: ${{ steps.gitversion.outputs.LegacySemVerPadded }}"
          echo "AssemblySemVer: ${{ steps.gitversion.outputs.AssemblySemVer }}"
          echo "AssemblySemFileVer: ${{ steps.gitversion.outputs.AssemblySemFileVer }}"
          echo "FullSemVer: ${{ steps.gitversion.outputs.FullSemVer }}"
          echo "InformationalVersion: ${{ steps.gitversion.outputs.InformationalVersion }}"
          echo "BranchName: ${{ steps.gitversion.outputs.BranchName }}"
          echo "Sha: ${{ steps.gitversion.outputs.Sha }}"
          echo "ShortSha: ${{ steps.gitversion.outputs.ShortSha }}"
          echo "NuGetVersionV2: ${{ steps.gitversion.outputs.NuGetVersionV2 }}"
          echo "NuGetVersion: ${{ steps.gitversion.outputs.NuGetVersion }}"
          echo "NuGetPreReleaseTagV2: ${{ steps.gitversion.outputs.NuGetPreReleaseTagV2 }}"
          echo "NuGetPreReleaseTag: ${{ steps.gitversion.outputs.NuGetPreReleaseTag }}"
          echo "VersionSourceSha: ${{ steps.gitversion.outputs.VersionSourceSha }}"
          echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }}"
          echo "CommitsSinceVersionSourcePadded: ${{ steps.gitversion.outputs.CommitsSinceVersionSourcePadded }}"
          echo "CommitDate: ${{ steps.gitversion.outputs.CommitDate }}"

      # Apply version to `package.json`

      - name: Build
        run: yarn build
      # Upload build artifact
      # - uses: actions/upload-artifact

  # release:
  #   runs-on: ubuntu-latest
  #   on:
  #     push:
  #       branches:
  #         - master
  #   env:
  #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #   steps:
  #     - uses: actions/download-artifact
  #     - uses: rymndhng/tag-release-on-push-action
  #       with:
          # strategy: patch
