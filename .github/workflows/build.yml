# https://stackoverflow.com/questions/49316050/how-to-deal-semantic-versioning-on-jenkins#49329647
# https://github.com/marketplace/actions/tag-release-on-push-action
# https://github.com/marketplace/actions/git-semantic-version
# https://github.com/marketplace/actions/upload-artifact
# https://github.com/marketplace/actions/download-artifact
name: Build
on: push

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1

      - name: Install Yarn
        run: npm install -g yarn

      - name: Yarn Install
        run: yarn install --frozen-lockfile

      - name: Lint
        run: yarn lint

      - name: Fetch tags for GitVersion
        run: git fetch --tags --unshallow

      - name: Fetch master for GitVersion
        if: github.ref != 'refs/heads/master'
        run: git branch --create-reflog master origin/master

      - name: GitVersion
        id: gitversion  # step id used as reference for output values
        uses: roryprimrose/rungitversion@v1.0.0

      - name: Yarn Version
        run: yarn version --no-git-tag-version --new-version ${{ steps.gitversion.outputs.FullSemVer }}

      - name: Build
        run: yarn build

      - name: Package
        run: yarn pack

      - uses: actions/upload-artifact@v1
        with:
          name: build
          path: ./*.tgz

  # release:

  #   needs: build

  #   runs-on: ubuntu-latest

  #   on:
  #     push:
  #       branches:
  #         - master
  #   env:
  #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #   steps:
  #     - uses: actions/download-artifact
  #     - uses: rymndhng/tag-release-on-push-action
  #       with:
  #         strategy: patch
